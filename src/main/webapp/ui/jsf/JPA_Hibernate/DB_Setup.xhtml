<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">
<h:head>
    <h:outputStylesheet library="styles" name="style.css"  />
    <h:outputStylesheet library="styles" name="highlight.min.css"  />
    <title>Set up</title>
</h:head>
<h:body>
    <div class="ui-g">
        <div class="ui-g-12">
            <p:graphicImage name="pictures/hibernate.png" style="margin: auto; display: block"/>
        </div>
        <div class="ui-g-12 ui-md-2">
            <ui:include src="/ui/components/menu.xhtml"/>
        </div>
        <div class="ui-g-12 ui-md-10 ui-g-nopad">
            <div class="ui-g-12 ui-g-nopad">
                <div class="box">
                    <h1>Setup</h1>
                    <h2>JPA</h2>
                    <p>V adresáry <i>src/main/resources</i> je nutné umiestniť adresár <i>META-INF</i>, v ktorom sa bude
                        nachádzať konfiguračný súbor <i>persistence.xml</i>. V tomto súbore sú definované persistentné
                        jednotky, pripojenie na databazu, v našom prípade MySql
                    </p>
                    <p>
                        Príklad použitého presistence.xml
                    </p>
                    <pre><code class="xml">
&lt;persistence-unit name=&quot;StudentsPU&quot; transaction-type=&quot;RESOURCE_LOCAL&quot;&gt;
    &lt;provider&gt;org.hibernate.jpa.HibernatePersistenceProvider&lt;/provider&gt;
    &lt;class&gt;cz.vutbr.fit.models.Student&lt;/class&gt;
    &lt;class&gt;cz.vutbr.fit.models.ISIC&lt;/class&gt;
    &lt;class&gt;cz.vutbr.fit.models.Subject&lt;/class&gt;
    &lt;class&gt;cz.vutbr.fit.models.Faculty&lt;/class&gt;
    &lt;properties&gt;
        &lt;property name=&quot;javax.persistence.jdbc.driver&quot; value=&quot;com.mysql.jdbc.Driver&quot; /&gt;
        &lt;property name=&quot;javax.persistence.jdbc.url&quot; value=&quot;jdbc:mysql://localhost/GJA&quot; /&gt;
        &lt;property name=&quot;javax.persistence.jdbc.user&quot; value=&quot;user69&quot; /&gt;
        &lt;property name=&quot;javax.persistence.jdbc.password&quot; value=&quot;heslo&quot; /&gt;
    &lt;/properties&gt;
&lt;/persistence-unit&gt;
                    </code></pre>

                    <p>
                        Vytvorenie <i>entity manager</i> s ktorým môžeme pracovať s perzistentnými objektami.
                    </p>
                    <pre><code class="java">
//JPA
protected EntityManagerFactory factory = Persistence.createEntityManagerFactory("StudentsPU");
protected EntityManager em = factory.createEntityManager();
                    </code></pre>

                    <h2>Hibernate</h2>
                    <p>
                        Hibernate používa konfiguračný súbor <i>hibernate.cfg.xml </i>. Tento súbor treba umiestniť do adresára
                        <i>src/main/resources</i>. Obsahuje mapovanie entit, informacie pre pripojenie do databaze a dalšie...
                    </p>
                    <p>
                        Príklad použitého <i>hibernate.cfg.xml </i>.
                    </p>
                    <pre><code class="xml">
&lt;session-factory&gt;
    &lt;!-- Database connection settings --&gt;
    &lt;property name=&quot;connection.driver_class&quot;&gt;com.mysql.jdbc.Driver&lt;/property&gt;
    &lt;property name=&quot;connection.url&quot;&gt;jdbc:mysql://localhost/GJA&lt;/property&gt;
    &lt;property name=&quot;connection.username&quot;&gt;user69&lt;/property&gt;
    &lt;property name=&quot;connection.password&quot;&gt;heslo&lt;/property&gt;

    &lt;!-- JDBC connection pool (use the built-in) --&gt;
    &lt;property name=&quot;connection.pool_size&quot;&gt;1&lt;/property&gt;

    &lt;!-- SQL dialect --&gt;
    &lt;property name=&quot;dialect&quot;&gt;org.hibernate.dialect.MySQL5Dialect&lt;/property&gt;

    &lt;!-- Enable Hibernate's automatic session context management --&gt;
    &lt;property name=&quot;current_session_context_class&quot;&gt;thread&lt;/property&gt;

    &lt;!-- Disable the second-level cache --&gt;
    &lt;property name=&quot;cache.provider_class&quot;&gt;org.hibernate.cache.internal.NoCacheProvider&lt;/property&gt;

    &lt;!-- Echo all executed SQL to stdout --&gt;
    &lt;property name=&quot;show_sql&quot;&gt;true&lt;/property&gt;

    &lt;mapping class=&quot;cz.vutbr.fit.models.Student&quot;/&gt;
    &lt;mapping class=&quot;cz.vutbr.fit.models.ISIC&quot;/&gt;
    &lt;mapping class=&quot;cz.vutbr.fit.models.Subject&quot;/&gt;
    &lt;mapping class=&quot;cz.vutbr.fit.models.Faculty&quot;/&gt;
&lt;/session-factory&gt;
                    </code></pre>
                    <p>
                        Hibernate využíva <i>Session</i>  pre správu perzistentných objektov.
                    </p>
                    <pre><code class="java">
//Hibernate
protected SessionFactory sessionFactory = HibernateUtils.getSessionFactory();
                    </code></pre>
                    <p>
                        Vytvorenie <i>Session Factory</i> z konfiguračného súboru môže vypadať nasledovne:
                    </p>
                    <pre><code class="java">
// Vytvorenie serviceRegistry z configuracneho subora hibernate.cfg.xml
ServiceRegistry serviceRegistry = new StandardServiceRegistryBuilder()//
        .configure("hibernate.cfg.xml").build();

// Vytvorenie metadat zdrojov pouzitim service registry
Metadata metadata = new MetadataSources(serviceRegistry).getMetadataBuilder().build();

return metadata.getSessionFactoryBuilder().build();
                    </code></pre>
                </div>
            </div>
        </div>
    </div>

    <h:outputScript library = "js" name = "highlight.min.js" />
    <ui:include src="/ui/components/scripts.xhtml"/>
</h:body>
</html>
